{"name":"Clustering","body":"# Clustering\r\n### A small cluster module with a plugin system\r\n\r\n## Install\r\n\r\n```shell\r\nnpm install clustering\r\n```\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar clustering = require('clustering');\r\n\r\nclustering(yourServer)\r\n\t.listen(3000);\r\n```\r\n\r\nAnd that will create a cluster running `yourServer`.\r\n\r\nYou can also `use` a `plugin` EG. `use(clustering.watch())` (watches the main file)\r\n\r\nOr `set` a property EG. `set('workers', 128)` (gives you a rediculous amount of workers)\r\n\r\n## API\r\n\r\n### Cluster\r\n\r\n- `use(plugin(Cluster))` => Use a plugin (execute it passing in the cluster)\r\n- `listen(port, host, callback)` => Listen in workers or Start workers in master\r\n- `set(prop, value)` => Set options (see `options`)\r\n- `restart()` => Restart the cluster (Start a new master and exit)\r\n- `reload()` => Reload the workers\r\n- `shutdown([signal])` => Shutdown the workers if there is a signal it sends that to them\r\n- `kill([signal])` => See `shutdown`\r\n- `stop([signal])` => See `shutdown`\r\n\r\n### Options\r\n\r\n- `workers` => The number of workers to spawn\r\n- `working directory` => Where to start new masters and (maybe?) workers\r\n\r\n### Plugins\r\n\r\n- `cli()` => CLI to the cluster\r\n\t- Requires `pidfiles`\r\n\t- Define new commands => Look at the source\r\n\t- Built-in commands\r\n\t\t- `status` (`-s`, `--status`) => Shows the status of the cluster\r\n\t\t- `restart` (`-r`, `--restart`) => Restarts the cluster\r\n\t\t- `stop` (`-S`, `--stop`) => Kills the cluster\r\n\t\t- `shutdown` (`-g`, `--shutdown`) => Shuts the cluster down (gracefully)\r\n\t\t- `help` (`-h`, `--help`) => Shows the help for the commands\r\n\t\t- `background` (`-b`, `--background`) => Starts the cluster in the background (actually just restarts it)\r\n- `watch([files[]], [full])` => Automatically restart / reload the cluster\r\n\t- `files` => The files to watch. Defaults to the main module\r\n\t- `full` => Whether or not to to a full restart\r\n- `pidfiles(dir)` => Save pidfiles for the master and workers\r\n\t- `dir` => Where to save them\r\n","tagline":"A small cluster module with a plugin system","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}